name: Build and Test

on: [push]

jobs:
  build_and_test_matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set output_base variable
        run: |
          # We have to do this because of 
          # https://github.com/protocolbuffers/protobuf/issues/12947 and specifically
          # https://developercommunity.visualstudio.com/t/clexe-compiler-driver-cannot-handle-long-file-path/975889
          if [[ "${{ matrix.os }}" == "windows-2022" ]]; then
            echo "output_base=d:\\O" >> $GITHUB_ENV
          else
            echo "output_base=$(pwd)/bazel-bin" >> $GITHUB_ENV
          fi 
        shell: bash
      - name: Add output_base to .bazelrc
        run: |
          mkdir ${{ env.output_base }}
          # echo "startup --output_base=${{ env.output_base }}" >> .bazelrc
          cat .bazelrc
        shell: bash
      - uses: bazelbuild/setup-bazelisk@v3
      - name: Test requirements files
        run: |
          bazel test requirements_test
        shell: bash
      - name: Run requirements update and output 
        run: |
          bazel run requirements.update > requirements_output.txt
        shell: bash
        if: failure()
      - name: Upload updated requirements file
        uses: actions/upload-artifact@v4
        with: 
          name: ${{ matrix.os }}-requirements
          path: requirements_output.txt
        if: failure()
      - name: Run tests
        run: bazel test ...
        shell: bash
      - name: Build example tarballs
        run: | 
          bazel build src:example_no_ui_tar
          bazel build src:example_tar
        shell: bash
      - name: Upload example tarballs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-example-tarballs
          path: |
            ${{ env.output_base }}/src/example_no_ui_tar.tar

  # Run tarbal on a fresh instance.
  test_tarballs_matrix:
    needs: [build_and_test_matrix]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os }}-example-tarballs
          path: ./ 
      - name: extract and run tarball
        run: |
          tar -xvf example_no_ui_tar.tar -C .
          ./example_no_ui
